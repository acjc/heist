def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

apply plugin: 'com.android.application'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

int major = 0
int minor = 0
int patch = 1

String commitId = System.getenv('TRAVIS_COMMIT') ?: 'local'

File keystorePropertiesFile = rootProject.file("key.properties")
if (keystorePropertiesFile.exists()) {
    Properties keystoreProperties = new Properties()
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    compileSdkVersion 28

    lintOptions {
        disable 'InvalidPackage'
    }

    defaultConfig {
        applicationId "com.acjc.heist"
        minSdkVersion 19
        targetSdkVersion 28
        versionCode major * 1000000 + minor * 10000 + patch * 100
        versionName "$major.$minor.$patch"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            keyAlias keystoreProperties ? keystoreProperties['keyAlias'] : System.getenv('ANDROID_KEY_ALIAS')
            keyPassword keystoreProperties ? keystoreProperties['keyPassword'] : System.getenv('ANDROID_KEY_PASSWORD')
            storeFile keystoreProperties ? file(keystoreProperties['storeFile']) : 'key.jks'
            storePassword keystoreProperties ? keystoreProperties['storePassword'] : System.getenv('ANDROID_KEY_PASSWORD')
        }
    }
    buildTypes {
        debug {
            applicationIdSuffix '.debug'
            versionNameSuffix '-debug'
            debuggable true
        }
        release {
            signingConfig signingConfigs.release
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}

apply plugin: 'com.google.gms.google-services'